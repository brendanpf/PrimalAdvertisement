---
// Learn about using Astro layouts:
// https://docs.astro.build/en/core-concepts/layouts/

// Component Imports
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';
import '../styles/global.css';

interface Props {
	title?: string | undefined;
	description?: string | undefined;
}

const { title, description } = Astro.props;
---

<html lang="en">
  <head>
    <MainHead title={title} description={description} />

    <script>
      (function() {
        const storedTheme = localStorage.getItem('theme');
        if (storedTheme) {
          document.documentElement.classList.toggle('theme-dark', storedTheme === 'dark');
        } else {
          const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          document.documentElement.classList.toggle('theme-dark', systemDark);
        }
      })();
    </script>
  </head>
  <body>
    <ViewTransitions />
    <div class="stack backgrounds">
      <Nav />
      <slot />
      <Footer />
    </div>

	<script>
		function applyBackgrounds() {
		  const backgrounds = document.querySelector('.backgrounds');
		  if (backgrounds) {
			// Reapply the 'loaded' class to ensure lazy loaded images are reapplied
			document.documentElement.classList.add('loaded');
	  
			// Force background images to reapply by toggling a class
			backgrounds.classList.toggle('refresh-backgrounds');
			setTimeout(() => {
			  backgrounds.classList.toggle('refresh-backgrounds');
			}, 10); // Helps force the repaint of the background
		  }
		}
	  
		// Add 'loaded' class once the document has completely loaded
		window.addEventListener('load', applyBackgrounds);
	  
		// Reapply background images after view transitions
		document.addEventListener('astro:after-swap', applyBackgrounds);
	</script>

<script>
  function setupReturnToTopButton() {
    // Get the button element
    const topButton = document.getElementById('return-to-top');

    // Check if the button exists
    if (topButton) {
      // Show or hide the button based on scroll position
      window.onscroll = function () {
        if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {
          topButton.style.display = "block";
        } else {
          topButton.style.display = "none";
        }
      };

      // Scroll to the top when the button is clicked
      topButton.addEventListener('click', function () {
        window.scrollTo({
          top: 0,
          behavior: 'smooth' // Smooth scroll to top
        });
      });
    } else {
      console.error("Return-to-top button not found!");
    }
  }

  // Ensure the script runs after the initial load
  document.addEventListener('DOMContentLoaded', setupReturnToTopButton);

  // Hook into Astro's view transitions to reinitialize the button after every transition
  document.addEventListener('astro:page-load', setupReturnToTopButton);
</script>

    <style>
       .return-to-top {
        position: fixed;
        bottom: 20px;
        right: 20px;
        display: none; /* Hidden by default */
        width: 70px; /* Width and height for the round button */
        height: 70px;
        background-color: #89CFF0;
        color: white;
        border: none;
        border-radius: 50%; /* Makes it round */
        cursor: pointer;
        font-size: 24px; /* Bigger font size for the arrow */
        z-index: 1000; /* Ensure it stays on top of other content */
        text-align: center; /* Center the arrow */
        line-height: 50px; /* Vertically center the arrow */
         box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* Add a shadow for depth */
        transition: background-color 0.3s ease; /* Smooth color transition */
        }

        .return-to-top:hover {
          background-color: #2980b9;
        }

      :root {
        --_placeholder-bg: linear-gradient(transparent, transparent);
        --bg-image-main: url('/assets/backgrounds/bg-main-light-800w.jpg');
        --bg-image-main-curves: url('/assets/backgrounds/bg-main-light.svg');
        --bg-image-subtle-1: var(--_placeholder-bg);
        --bg-image-subtle-2: var(--_placeholder-bg);
        --bg-image-footer: var(--_placeholder-bg);
        --bg-svg-blend-mode: overlay;
        --bg-blend-mode: darken;
        --bg-image-aspect-ratio: 2.25;
        --bg-scale: 1.68;
        --bg-aspect-ratio: calc(var(--bg-image-aspect-ratio) / var(--bg-scale));
        --bg-gradient-size: calc(var(--bg-scale) * 100%);
      }

      :root.theme-dark {
        --bg-image-main: url('/assets/backgrounds/bg-main-dark-800w.jpg');
        --bg-image-main-curves: url('/assets/backgrounds/bg-main-dark.svg');
        --bg-svg-blend-mode: darken;
        --bg-blend-mode: lighten;
      }

      :root.loaded {
        --bg-image-subtle-1: url('/assets/backgrounds/bg-subtle-1-light-800w.jpg');
        --bg-image-subtle-2: url('/assets/backgrounds/bg-subtle-2-light-800w.jpg');
        --bg-image-footer: url('/assets/backgrounds/bg-footer-light-800w.jpg');
      }

      :root.loaded.theme-dark {
        --bg-image-subtle-1: url('/assets/backgrounds/bg-subtle-1-dark-800w.jpg');
        --bg-image-subtle-2: url('/assets/backgrounds/bg-subtle-2-dark-800w.jpg');
        --bg-image-footer: url('/assets/backgrounds/bg-footer-dark-800w.jpg');
      }

      .backgrounds {
        min-height: 100%;
        isolation: isolate;
        background:
          url('/assets/backgrounds/noise.png') top center/220px repeat,
          var(--bg-image-footer) bottom center/var(--bg-gradient-size) no-repeat,
          var(--bg-image-main-curves) top center/var(--bg-gradient-size) no-repeat,
          var(--bg-image-main) top center/var(--bg-gradient-size) no-repeat,
          var(--gray-999);
        background-blend-mode: overlay, var(--bg-blend-mode), var(--bg-svg-blend-mode), normal, normal;
      }

      /* Force repaint of backgrounds when toggling class to refresh the background */
      .backgrounds.refresh-backgrounds {
        opacity: 1.00;
      }
    </style>
    <button id="return-to-top" class="return-to-top">â†‘ Top</button>
  </body>
</html>
