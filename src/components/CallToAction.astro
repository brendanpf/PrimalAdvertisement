---
interface Props {
	href: string; // Define the type for the href prop.
}

const { href } = Astro.props;  // Destructure the href prop passed to the component.
---

<a href={href}><slot /></a>

<style>
	a {
		position: relative;  /* Enables positioning for pseudo-elements like ::after. */
		display: flex;  /* Creates a fully rounded (pill-shaped) button. */
		place-content: center;
		text-align: center;
		padding: 0.56em 2em;
		gap: 0.8em;
		color: var(--accent-text-over);
		text-decoration: none;
		line-height: 1.1;
		border-radius: 999rem;
		overflow: hidden;
		background: var(--gradient-accent-orange);
		box-shadow: var(--shadow-md); /* Adds a shadow effect for a 3D-like appearance. */
		white-space: nowrap;
	}

    /* Media query for larger screens (minimum width 20em / 320px). */
	@media (min-width: 20em) {
		a {
			font-size: var(--text-lg);
		}
	}

	/* Overlay for hover effects. */
	a::after {
		content: '';
		position: absolute;
		inset: 0;
		pointer-events: none;
		transition: background-color var(--theme-transition);
		mix-blend-mode: overlay;
	}

	/* Adds a semi-transparent overlay when the link is hovered or focused */
	a:focus::after,
	a:hover::after {
		background-color: hsla(var(--gray-999-basis), 0.3); /* Applies a gray overlay with 30% transparency. */
	}

	@media (min-width: 50em) {
		a {
			padding: 1.125rem 2.5rem;
			font-size: var(--text-xl);
		}
	}
</style>
